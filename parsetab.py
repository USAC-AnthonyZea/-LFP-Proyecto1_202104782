
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DECIMAL DIV ENTERO IGUAL LLAA LLAC RDIVISION RINVERSO RMOD RMULTIPLICACION RNUMERO ROPERACION RPOTENCIA RRAIZ RRESTA RSUMA RTIPOinit : instruccionesinstrucciones    : instrucciones instruccion\n                        |   instruccioninstruccion  : LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLACinstrucciones_2 : instrucciones_2 instruccion_2instrucciones_2 :  instruccion_2instruccion_2  :  LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLACinstruccion_2 : LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC instruccion_2 : LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC tipo :   RSUMA\n            |   RRESTA\n            |   RMULTIPLICACION\n            |   RDIVISION\n            |   RRAIZ\n            |   RPOTENCIA\n            |   RMOD\n            |   RINVERSO\n    '
    
_lr_action_items = {'LLAA':([0,2,3,5,7,9,10,14,27,28,30,33,34,41,42,44,],[4,4,-3,-2,8,13,-6,-5,31,32,8,-4,37,-8,-9,-7,]),'$end':([1,2,3,5,33,],[0,-1,-3,-2,-4,]),'RTIPO':([4,17,],[6,29,]),'LLAC':([6,12,18,19,20,21,22,23,24,25,26,29,38,39,43,],[7,16,30,-10,-11,-12,-13,-14,-15,-16,-17,33,41,42,44,]),'ROPERACION':([8,13,37,40,],[11,11,11,43,]),'RNUMERO':([8,13,35,36,37,],[12,12,38,39,12,]),'IGUAL':([11,],[15,]),'DIV':([13,31,32,37,],[17,35,36,40,]),'RSUMA':([15,],[19,]),'RRESTA':([15,],[20,]),'RMULTIPLICACION':([15,],[21,]),'RDIVISION':([15,],[22,]),'RRAIZ':([15,],[23,]),'RPOTENCIA':([15,],[24,]),'RMOD':([15,],[25,]),'RINVERSO':([15,],[26,]),'DECIMAL':([16,],[27,]),'ENTERO':([16,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,5,]),'instrucciones_2':([7,30,],[9,34,]),'instruccion_2':([7,9,30,34,],[10,14,10,14,]),'tipo':([15,],[18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','analizador_lexico.py',99),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','analizador_lexico.py',104),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','analizador_lexico.py',105),
  ('instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC','instruccion',8,'p_instruccion','analizador_lexico.py',113),
  ('instrucciones_2 -> instrucciones_2 instruccion_2','instrucciones_2',2,'p_instrucciones_2_lista','analizador_lexico.py',117),
  ('instrucciones_2 -> instruccion_2','instrucciones_2',1,'p_instrucciones_2_instruccion','analizador_lexico.py',122),
  ('instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC','instruccion_2',10,'p_instruccion_2','analizador_lexico.py',126),
  ('instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC','instruccion_2',8,'p_instruccion_2_decimal','analizador_lexico.py',130),
  ('instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC','instruccion_2',8,'p_instruccion_2_entero','analizador_lexico.py',134),
  ('tipo -> RSUMA','tipo',1,'p_tipo','analizador_lexico.py',145),
  ('tipo -> RRESTA','tipo',1,'p_tipo','analizador_lexico.py',146),
  ('tipo -> RMULTIPLICACION','tipo',1,'p_tipo','analizador_lexico.py',147),
  ('tipo -> RDIVISION','tipo',1,'p_tipo','analizador_lexico.py',148),
  ('tipo -> RRAIZ','tipo',1,'p_tipo','analizador_lexico.py',149),
  ('tipo -> RPOTENCIA','tipo',1,'p_tipo','analizador_lexico.py',150),
  ('tipo -> RMOD','tipo',1,'p_tipo','analizador_lexico.py',151),
  ('tipo -> RINVERSO','tipo',1,'p_tipo','analizador_lexico.py',152),
]
